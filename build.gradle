// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.10"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.4'
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.3.1"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    ext {
        androidLibs = [
                appcompat         : 'androidx.appcompat:appcompat:1.2.0',
                recyclerview      : 'androidx.recyclerview:recyclerview:1.1.0',
                constraintlayout  : 'androidx.constraintlayout:constraintlayout:2.0.4',
                androidxCode      : 'androidx.core:core-ktx:1.3.2',
                material          : 'com.google.android.material:material:1.2.1',
                legacy            : 'androidx.legacy:legacy-support-v4:1.0.0',
                roomRuntime       : 'androidx.room:room-runtime:2.2.5',
                gilde             : 'com.github.bumptech.glide:compiler:4.11.0',
                servicesVision    : 'com.google.android.gms:play-services-vision:20.1.2',
                coroutinesCore    : 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9',
                squareupOkhttp3   : 'com.squareup.okhttp3:okhttp:4.9.0',
                navigationFragment: 'androidx.navigation:navigation-fragment-ktx:2.3.1',
                navigationUi      : 'androidx.navigation:navigation-ui-ktx:2.3.1'

        ]

        retrofitLibs = [
                converterScalars : 'com.squareup.retrofit2:converter-scalars:2.9.0',
                converterGson    : 'com.squareup.retrofit2:converter-gson:2.9.0',
                retrofitlids     : 'com.squareup.retrofit2:retrofit:2.9.0',
                converterMoshi   : 'com.squareup.retrofit2:converter-moshi:2.9.0',
                coroutinesAdapter: 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
        ]

        firebaseLibs = [
                firebaseAnalytics: 'com.google.firebase:firebase-analytics:18.0.0',
                firebaseDatabase : 'com.google.firebase:firebase-database-ktx:19.5.1'
        ]

        kotlinLibs = [
                stdlib    : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
                coroutines: 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9',

        ]

        libs = [
                dexter            : 'com.karumi:dexter:6.2.1',
                dagger            : 'com.google.dagger:dagger:2.28.1',
                loggingInterceptor: 'com.squareup.okhttp3:logging-interceptor:4.9.0'
        ]

        //

        androidTestLibs = [
                testRunner      : 'androidx.test:runner:1.3.0',
                espresso        : 'androidx.test.espresso:espresso-core:3.3.0',
                rules           : 'androidx.test:rules:1.3.0',
                extJunit        : 'androidx.test.ext:junit:1.1.2',
                mockwebserver   : 'com.squareup.okhttp3:mockwebserver:4.9.0',
                okhttpIdling    : 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0',
                espressoxContrib: 'androidx.test.espresso:espresso-contrib:3.3.0',
                coroutinesTest  : 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9',
                ecyclerviewChild: 'it.xabaras.android.espresso:recyclerview-child-actions:1.0',
                espressoContrib : 'com.android.support.test.espresso:espresso-contrib:3.3.0',

        ]


        testLibs = [
                junit         : 'junit:junit:4.13.1',
                coreTesting   : 'android.arch.core:core-testing:1.1.1',
                mockitoKotlin : 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0',
                mockitoInline : 'org.mockito:mockito-inline:3.5.13',
                coroutinesTest: 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9',
        ]

        daggerKaptTestLibs = [
                daggerKaptTest: 'com.google.dagger:dagger-compiler:2.28',
        ]

        glideAnnotationLibs = [
                gildeAnnotationProcessor: 'com.github.bumptech.glide:compiler:4.11.0'
        ]

        androidKaptLibs = [
                daggerCompiler: 'com.google.dagger:dagger-compiler:2.28',
                roomCompiler  : 'androidx.room:room-compiler:2.2.5',
                glideCompiler : 'com.github.bumptech.glide:compiler:4.11.0',
                daggerKapt    : 'com.google.dagger:dagger-compiler:2.28',
//                roomRuntime   : 'androidx.room:room-runtime:2.2.5',
//                roomKapt      : 'androidx.room:room-compiler:2.2.5',
        ]


        testKaptDagger=[
                daggerCompilerKapt: 'com.google.dagger:dagger-compiler:2.28'
        ]






        androidxTestLibs = [
                archCoreTesting: 'androidx.arch.core:core-testing:2.1.0'
        ]




    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}